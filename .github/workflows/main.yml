name: Build 420rom OneUI 3.0 Canary Kernel

on: [push]

env:
  TOOLCHAIN: default
  INSTALLER: yes

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        model: [ "N970F", "N975F", "N976B" ]

    steps:
    - uses: actions/checkout@v2
    - name: Kernel Configure
      run: |
        set -e -o pipefail
        ./cruelbuild config                        \
                    os_version=11.0.0              \
                    os_patch_level=2020-12         \
                    model=${{ matrix.model }}      \
                    name=420rom-ETLL-v11.1.1-Can   \
                    toolchain=$TOOLCHAIN           \
                    +magisk=canary                 \
                    +nohardening                   \
                    +nodebug                       \
                    +noatime                       \
                    +ttl                           \
                    +wireguard                     \
                    +mass_storage                  \
                    +cifs                          \
                    +sdfat                         \
                    +ntfs                          \
                    +morosound                     \
                    +io_maple                      \
                    +io_fiops                      \
                    +io_sio                        \
                    +io_zen                        \
                    +io_anxiety                    \
                    +io_noop                       \
                    +io_cfq                        \
                    +sched_powersave               \
                    +sched_userspace               \
                    +sched_performance             \
                    +sched_conservative            \
                    +sched_ondemand                \
                    +tcp_westwood                  \
                    +tcp_htcp                      \
                    +tcp_cubic                     \
                    +tcp_bbr                       \
                    +tcp_bic                       \
                    +boeffla_wl_blocker            \
        2>&1 | tee config.info
    - name: Install gcc-aarch64-linux-gnu
      env:
        DEBIAN_FRONTEND: noninteractive
      if: env.TOOLCHAIN == 'system-gcc'
      run: sudo apt-get install -y -qq gcc-aarch64-linux-gnu
    - name: Deploy Toolchain
      if: env.TOOLCHAIN != 'system-gcc' && env.TOOLCHAIN != 'system-clang'
      run: git clone --depth 1 -j $(nproc) --branch $TOOLCHAIN --single-branch https://github.com/CruelKernel/samsung-exynos9820-toolchain toolchain
    - name: Kernel Build
      run: ./cruelbuild :build
    - name: Install mkbootimg
      run: |
        wget -q https://android.googlesource.com/platform/system/tools/mkbootimg/+archive/refs/heads/master.tar.gz -O - | tar xzf - mkbootimg.py
        chmod +x mkbootimg.py
        sudo mv mkbootimg.py /usr/local/bin/mkbootimg
    - name: Install mkdtboimg
      run: |
        wget -q https://android.googlesource.com/platform/system/libufdt/+archive/refs/heads/master.tar.gz -O - | tar --strip-components 2 -xzf - utils/src/mkdtboimg.py
        chmod +x mkdtboimg.py
        sudo mv mkdtboimg.py /usr/local/bin/mkdtboimg
    - name: Install avbtool
      run: |
        wget -q https://android.googlesource.com/platform/external/avb/+archive/refs/heads/master.tar.gz -O - | tar xzf - avbtool.py
        chmod +x avbtool.py
        sudo mv avbtool.py /usr/local/bin/avbtool
    - name: Create CruelKernel images for ${{ matrix.model }}
      run: ./cruelbuild :mkimg
    - name: Create CruelKernel installer for ${{ matrix.model }}
      if: env.INSTALLER == 'yes'
      run: ./cruelbuild :pack
    - name: Avoid Double Zipping in Installer
      if: env.INSTALLER == 'yes'
      run: |
        mkdir -p installer && cd installer
        unzip ../CruelKernel.zip
    - name: Upload Kernel Zip
      if: env.INSTALLER == 'yes'
      uses: actions/upload-artifact@v2
      with:
        name: 420rom-ETLL-v11.1.1-${{ matrix.model }}-Canary-Kernel
        path: installer/*
        if-no-files-found: error
    - name: Upload Kernel Images
      if: env.INSTALLER != 'yes'
      uses: actions/upload-artifact@v2
      with:
        name: CruelKernel-${{ matrix.model }}
        path: '*.img'
        if-no-files-found: error
    - name: Upload Kernel Info
      uses: actions/upload-artifact@v2
      with:
        name: ConfigurationInfo-420rom-ETLL-v11.1.1-${{ matrix.model }}-Canary-Kernel
        path: config.*
        if-no-files-found: error
